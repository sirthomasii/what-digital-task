name: CI/CD

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          cd backend
          pip install -r requirements.txt

      - name: Run code quality checks
        run: |
          cd backend
          black . --check
          flake8 .

      - name: Run Django tests
        run: |
          cd backend
          python manage.py test

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and test combined Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: what-digital-task:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Divio CLI
        run: |
          python -m pip install --upgrade pip
          pip install divio-cli

      - name: Configure Divio CLI
        run: |
          divio login ${{ secrets.DIVIO_TOKEN }}

      # Use the root Dockerfile for Divio deployment
      - name: Deploy to Divio
        run: |
          echo "Deploying to Divio test environment..."
          divio project deploy test --remote-id ${{ secrets.DIVIO_APP_UUID }}
          
      - name: Check deployment status
        run: |
          echo "Checking deployment status..."
          divio project status --remote-id ${{ secrets.DIVIO_APP_UUID }} 